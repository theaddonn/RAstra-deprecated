use crate::packets::handshake_server_to_client::HandshakeServerToClientPacket;
use crate::packets::login::LoginPacket;
use crate::packets::network_settings::NetworkSettingsPacket;
use crate::packets::network_settings_request::NetworkSettingsRequestPacket;

#[repr(u64)]
#[derive(Debug)]
pub enum GamePacket {
    Login(LoginPacket) = 1,
    PlayStatus() = 2,
    ServerToClientHandshake(HandshakeServerToClientPacket) = 3,
    ClientToServerHandshake() = 4,
    Disconnect() = 5,
    ResourcePacksInfo() = 6,
    ResourcePackStack() = 7,
    ResourcePackClientResponse() = 8,
    Text() = 9,
    SetTime() = 10,
    StartGame() = 11,
    AddPlayer() = 12,
    AddEntity() = 13,
    RemoveEntity() = 14,
    AddItemEntity() = 15,
    TakeItemEntity() = 17,
    MoveEntity() = 18,
    MovePlayer() = 19,
    RiderJump() = 20,
    UpdateBlock() = 21,
    AddPainting() = 22,
    TickSync() = 23,
    LevelSoundEventOld() = 24,
    LevelEvent() = 25,
    BlockEvent() = 26,
    EntityEvent() = 27,
    MobEffect() = 28,
    UpdateAttributes() = 29,
    InventoryTransaction() = 30,
    MobEquipment() = 31,
    MobArmorEquipment() = 32,
    Interact() = 33,
    BlockPickRequest() = 34,
    EntityPickRequest() = 35,
    PlayerAction() = 36,
    HurtArmor() = 38,
    SetEntityData() = 39,
    SetEntityMotion() = 40,
    SetEntityLink() = 41,
    SetHealth() = 42,
    SetSpawnPosition() = 43,
    Animate() = 44,
    Respawn() = 45,
    ContainerOpen() = 46,
    ContainerClose() = 47,
    PlayerHotbar() = 48,
    InventoryContent() = 49,
    InventorySlot() = 50,
    ContainerSetData() = 51,
    CraftingData() = 52,
    CraftingEvent() = 53,
    GuiDataPickItem() = 54,
    AdventureSettings() = 55,
    BlockEntityData() = 56,
    PlayerInput() = 57,
    LevelChunk() = 58,
    SetCommandsEnabled() = 59,
    SetDifficulty() = 60,
    ChangeDimension() = 61,
    SetPlayerGameType() = 62,
    PlayerList() = 63,
    SimpleEvent() = 64,
    TelemetryEvent() = 65,
    SpawnExperienceOrb() = 66,
    ClientboundMapItemData() = 67,
    MapInfoRequest() = 68,
    RequestChunkRadius() = 69,
    ChunkRadiusUpdate() = 70,
    ItemFrameDropItem() = 71,
    GameRulesChanged() = 72,
    Camera() = 73,
    BossEvent() = 74,
    ShowCredits() = 75,
    AvailableCommands() = 76,
    CommandRequest() = 77,
    CommandBlockUpdate() = 78,
    CommandOutput() = 79,
    UpdateTrade() = 80,
    UpdateEquipment() = 81,
    ResourcePackDataInfo() = 82,
    ResourcePackChunkData() = 83,
    ResourcePackChunkRequest() = 84,
    Transfer() = 85,
    PlaySound() = 86,
    StopSound() = 87,
    SetTitle() = 88,
    AddBehaviorTree() = 89,
    StructureBlockUpdate() = 90,
    ShowStoreOffer() = 91,
    PurchaseReceipt() = 92,
    PlayerSkin() = 93,
    SubClientLogin() = 94,
    InitiateWebSocketConnection() = 95,
    SetLastHurtBy() = 96,
    BookEdit() = 97,
    NpcRequest() = 98,
    PhotoTransfer() = 99,
    ModalFormRequest() = 100,
    ModalFormResponse() = 101,
    ServerSettingsRequest() = 102,
    ServerSettingsResponse() = 103,
    ShowProfile() = 104,
    SetDefaultGameType() = 105,
    RemoveObjective() = 106,
    SetDisplayObjective() = 107,
    SetScore() = 108,
    LabTable() = 109,
    UpdateBlockSynced() = 110,
    MoveEntityDelta() = 111,
    SetScoreboardIdentity() = 112,
    SetLocalPlayerAsInitialized() = 113,
    UpdateSoftEnum() = 114,
    NetworkStackLatency() = 115,
    ScriptCustomEvent() = 117,
    SpawnParticleEffect() = 118,
    AvailableEntityIdentifiers() = 119,
    LevelSoundEventV2() = 120,
    NetworkChunkPublisherUpdate() = 121,
    BiomeDefinitionList() = 122,
    LevelSoundEvent() = 123,
    LevelEventGeneric() = 124,
    LecternUpdate() = 125,
    VideoStreamConnect() = 126,
    ClientCacheStatus() = 129,
    OnScreenTextureAnimation() = 130,
    MapCreateLockedCopy() = 131,
    StructureTemplateDataExportRequest() = 132,
    StructureTemplateDataExportResponse() = 133,
    UpdateBlockProperties() = 134,
    ClientCacheBlobStatus() = 135,
    ClientCacheMissResponse() = 136,
    NetworkSettings(NetworkSettingsPacket) = 143,
    PlayerAuthInput() = 144,
    CreativeContent() = 145,
    PlayerEnchantOptions() = 146,
    ItemStackRequest() = 147,
    ItemStackResponse() = 148,
    UpdatePlayerGameType() = 151,
    PacketViolationWarning() = 156,
    ItemComponent() = 162,
    FilterTextPacket() = 163,
    UpdateSubChunkBlocksPacket() = 172,
    SubChunkPacket() = 174,
    SubChunkRequestPacket() = 175,
    DimensionData() = 180,
    RequestNetworkSettings(NetworkSettingsRequestPacket) = 193,
    AlexEntityAnimation() = 224,
}

impl GamePacket {
    pub fn id(&self) -> u64 {
        unsafe { *(self as *const Self as *const u64) }
    }
}