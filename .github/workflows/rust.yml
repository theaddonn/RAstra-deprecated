name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_x86_64-pc-windows-msvc:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Setup Rust x86_64-pc-windows-msvc
      run: rustup target add x86_64-pc-windows-msvc
      
    - name: Build x86_64-pc-windows-msvc
      run: cargo build --release --target=x86_64-pc-windows-msvc
      
    - name: Archive Build Artifacts for x86_64-pc-windows-msvc
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-pc-windows-msvc-artifact
        path: target/x86_64-pc-windows-msvc/release/RAstra.exe
        
  build_x86_64-unknown-linux-gnu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Rust x86_64-unknown-linux-gnu
      run: rustup target add x86_64-unknown-linux-gnu
      
    - name: Build x86_64-unknown-linux-gnu
      run: cargo build --release --target=x86_64-unknown-linux-gnu
      
    - name: Archive Build Artifacts for x86_64-unknown-linux-gnu
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-unknown-linux-gnu-artifact
        path: target/x86_64-unknown-linux-gnu/release/RAstra

  
  build_x86_64-apple-darwin:
  
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust x86_64-apple-darwin
      run: rustup target add x86_64-apple-darwin

    - name: Build x86_64-apple-darwin
      run: cargo build --release --target=x86_64-apple-darwin

    - name: Archive Build Artifacts for x86_64-apple-darwin
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-apple-darwin-artifact
        path: target/x86_64-apple-darwin/release/RAstra

  build_aarch64-pc-windows-msvc:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Setup Rust aarch64-pc-windows-msvc
      run: rustup target add aarch64-pc-windows-msvc
      
    - name: Build aarch64-pc-windows-msvc
      run: cargo build --release --target=aarch64-pc-windows-msvc
      
    - name: Archive Build Artifacts for aarch64-pc-windows-msvc
      uses: actions/upload-artifact@v2
      with:
        name: aarch64-pc-windows-msvc-artifact
        path: target/aarch64-pc-windows-msvc/release/RAstra.exe

  build_aarch64-unknown-linux-gnu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Rust aarch64-unknown-linux-gnu
      run: sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Setup Rust Toolchain aarch64-unknown-linux-gnu
      run: rustup target add aarch64-unknown-linux-gnu

      
    - name: Build aarch64-unknown-linux-gnu
      run: cargo build --release --target=aarch64-unknown-linux-gnu
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
      
    - name: Archive Build Artifacts for aarch64-unknown-linux-gnu
      uses: actions/upload-artifact@v2
      with:
        name: aarch64-unknown-linux-gnu-artifact
        path: target/aarch64-unknown-linux-gnu/release/RAstra
        
  build_aarch64-apple-darwin:
  
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Rust aarch64-apple-darwin
      run: rustup target add aarch64-apple-darwin

    - name: Build aarch64-apple-darwin
      run: cargo build --release --target=aarch64-apple-darwin

    - name: Archive Build Artifacts for aarch64-apple-darwin
      uses: actions/upload-artifact@v2
      with:
        name: aarch64-apple-darwin-artifact
        path: target/aarch64-apple-darwin/release/RAstra
  release:
    needs:
      - build_x86_64-pc-windows-msvc
      - build_x86_64-unknown-linux-gnu
      - build_x86_64-apple-darwin
      - build_aarch64-pc-windows-msvc
      - build_aarch64-unknown-linux-gnu
      - build_aarch64-apple-darwin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: autoatic_release_${{ github.run_number }}
          release_name: Automatic Release (V ${{ github.run_number }})
          body: |
            This is an automatic Release for the RAstra MCBE Server Software created by the rust build (rust.yml) workflow.
            VERSION: ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset for x86_64-pc-windows-msvc
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: target/x86_64-pc-windows-msvc/release/RAstra.exe
          asset_name: RAstra_v${{ github.run_number }}.jar
          asset_content_type: application/zip

